eksctl create cluster --name YOUR_CLUSTER_NAME --version 1.28 --fargate

eksctl utils associate-iam-oidc-provider --cluster YOUR_CLUSTER_NAME --approve



curl -o iam_policy.json https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.6.1/docs/install/iam_policy.json




aws iam create-policy \
--policy-name AWSLoadBalancerControllerIAMPolicy \
--policy-document file://iam_policy.json





eksctl create iamserviceaccount \    
--cluster=YOUR_CLUSTER_NAME \  
--namespace=kube-system \  
--name=aws-load-balancer-controller \  
--attach-policy-arn=arn:aws:iam::<AWS_ACCOUNT_ID>:policy/AWSLoadBalancerControllerIAMPolicy \  
--override-existing-serviceaccounts \  
--approve




eksctl get iamserviceaccount --cluster YOUR_CLUSTER_NAME --name aws-load-balancer-controller --namespace kube-system




kubectl get serviceaccount aws-load-balancer-controller --namespace kube-system




helm repo add eks https://aws.github.io/eks-charts




  helm repo update eks 




helm install aws-load-balancer-controller eks/aws-load-balancer-controller \      
--set clusterName=YOUR_CLUSTER_NAME \  
--set serviceAccount.create=false \  
--set region=YOUR_REGION_CODE \  
--set vpcId=<VPC_ID> \  
--set serviceAccount.name=aws-load-balancer-controller \  
-n kube-system




kubectl get deployment -n kube-system aws-load-balancer-controller     



eksctl create fargateprofile --cluster your-cluster --region your-region-code --name your-alb-sample-app --namespace game-2048


kubectl apply -f https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.6.1/docs/examples/2048/2048_full.yaml



kubectl logs -n kube-system deployment.apps/aws-load-balancer-controller
kubectl get endpoints -n game-2048\
kubectl get ingress/ingress-2048 -n game-2048
